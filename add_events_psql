#!/usr/bin/python

import psycopg2
import datetime
from dateutil.parser import parse
import facebook

def get_fb():
    f = open("../facebook_data", 'r')
    app_info = [x.strip() for x in f.read().split(" ")]
    access_token = facebook.get_app_access_token(app_info[0], app_info[1])
    graph = facebook.GraphAPI(access_token)

    result = graph.get_object(id="/ucbupe/events", fields="name,start_time,description,place,cover,id")
    return result['data']

def get_db(conn):
    cur = conn.cursor()
    cur.execute("SELECT * FROM upe_calendar_event;")
    db_results = cur.fetchall()
    cur.close()

    return db_results

def put_db(conn, entry, exists):
    cur = conn.cursor()
    if not exists:
        cur.execute("""INSERT INTO upe_calendar_event (name, start_time, description, location, banner, facebookid) 
                    VALUES (%(name)s, %(start_time)s, %(description)s, %(location)s, %(banner)s, %(facebookid)s);""",
                    entry)
    else:
        cur.execute("""UPDATE upe_calendar_event 
                    SET name=%(name)s,start_time=%(start_time)s,description=%(description)s,location=%(location)s,banner=%(banner)s
                    WHERE facebookid = %(facebookid)s;""", 
                    entry)

    cur.close()
    
conn = psycopg2.connect("dbname=upe_db host=localhost port=5432 user=admin password=littlewhale")

db = get_db(conn)
fb = get_fb()

for fbe in fb:
    start = parse(fbe["start_time"])
    fbe_t = {
             "name" : fbe["name"], 
             "start_time" : start, 
             "description" : fbe["description"] if "description" in fbe else "", 
             "location" : fbe["place"]["name"], 
             "banner" : fbe["cover"]["source"] if "cover" in fbe else "", 
             "facebookid" : fbe["id"]
            }
    for dbe in db:
        if dbe[6] == int(fbe_t["facebookid"]):
            # Match found
            put_db(conn, fbe_t, True)
            break
    else:
        # No match found        
        put_db(conn, fbe_t, False)
        pass

conn.commit()
conn.close()

